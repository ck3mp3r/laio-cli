---
name: Release

on:
  workflow_dispatch:
  workflow_call:

permissions: write-all

env:
  APP_NAME: laio
  GH_USER: "Christian Kemper"
  GH_EMAIL: "christian.kemper@me.com"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prep:
    runs-on: ubuntu-latest
    outputs:
      new-version: ${{ steps.get_version.outputs.new-version }}
      is-release-build: ${{ steps.get_version.outputs.is-release-build }}

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - id: get_version
        uses: ./.github/actions/version

      - name: Create release branch
        if: ${{ steps.get_version.outputs.is-release-build == true }} 
        run: |
          git config --global user.name ${{ env.GH_USER }} 
          git config --global user.email ${{ env.GH_EMAIL }} 

          BRANCH="release/v${{ steps.get_version.outputs.new-version }}"
          git checkout -b "${BRANCH}" || git checkout "${BRANCH}"

      - name: run preliminary checks and tests
        if: ${{ ! env.ACT }}
        run: |
          nix flake show
          nix develop --command tests

      - name: Update Cargo.toml and Brew Formula if required.
        if: ${{ steps.get_version.outputs.is-release-build == true }} 
        run: |
          current_version=${{ steps.get_version.outputs.current-version }}
          new_version=${{ steps.get_version.outputs.new-version }}
          is_release_build=${{ steps.get_version.outputs.is-release-build }}
          if [ "${is_release_build}" == "true" ]; then
            sed -i "s/^version = \".*\"/version = \"${new_version}\"/" Cargo.toml
            sed -i -E "s/(version \")[^\"]*(\")/\1${new_version}\2/" Formula/laio.rb
            nix develop --command cargo update -p ${{ env.APP_NAME }}
            git add Cargo.toml Cargo.lock Formula/laio.rb
            git commit -m "Bump versions to ${new_version}"
            git push --force --set-upstream origin release/v${{ steps.get_version.outputs.new-version }}
          fi

  build:
    needs: prep
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: linux-amd64
            runner: ubuntu-latest
            target: x86_64-linux
          - name: linux-arm64
            runner: ubuntu-latest
            target: aarch64-linux
          - name: macos-amd64
            runner: macos-13
            target: x86_64-darwin
          - name: macos-arm64
            runner: macos-14
            target: aarch64-darwin

    steps:
      - name: Checkout Code Release Build
        uses: actions/checkout@v4
        if: ${{ needs.prep.outputs.is-release-build == true }}
        with:
          ref: release/v${{ needs.prep.outputs.new-version }}
          
      - name: Checkout Code Branch build
        uses: actions/checkout@v4
        if: ${{ needs.prep.outputs.is-release-build != true}}

      - name: git setup
        run: |
          git config --global user.name ${{ env.GH_USER }} 
          git config --global user.email ${{ env.GH_EMAIL }}

      - name: build
        id: build
        uses: ck3mp3r/actions/nix-build@main
        with:
          target: ${{ matrix.target }}
          name: ${{ env.APP_NAME }}
          version: ${{ needs.prep.outputs.new-version }}

      - name: update catalog
        uses: ./.github/actions/package-data
        if: ${{ needs.prep.outputs.is-release-build == true }}
        with:
          binary: ${{ steps.build.outputs.binary }}
          nix-sha256: ${{ steps.build.outputs.nix-sha256 }}
          sha256: ${{ steps.build.outputs.sha256 }}
          target: ${{ matrix.target }}
          url_prefix: https://github.com/ck3mp3r/laio-cli/releases/download
          version: ${{ needs.prep.outputs.new-version }}

  release:
    needs:
      - prep
      - build
    runs-on: ubuntu-latest
    if: ${{ needs.prep.outputs.is-release-build == 'true' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: release/v${{ needs.prep.outputs.new-version }}

      - uses: ./.github/actions/release
        with:
          app-name: ${{ env.APP_NAME }}
          gh-email: ${{ env.GH_EMAIL }}
          gh-user: ${{ env.GH_USER }}
          is-release-build: ${{ needs.prep.outputs.is-release-build }}
          version: ${{ needs.prep.outputs.new-version }}
